`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
//
//Students: Brett Bushnell (Undergrad), Matt Dzurick (Grad)
//Date Created: Wed Dec  7 02:25:03 2016
//Assignment: 3
//File: test.v
//Description: An HLSM module which represents the C-like behavioral description 
//             into a scheduled high-level statement machine implemented in Verilog.
//
//////////////////////////////////////////////////////////////////////////////////

module HLSM(Clk, Rst, Start, Done, x0, x1, x2, x3, y0, c0, five, ten, d1, d2, e, f, g, h);
	input Clk, Rst, Start;
	output reg Done;

	input signed [31:0] x0, x1, x2, x3, y0, c0, five, ten;

	output signed [31:0] d1, d2, e, f, g, h;

	reg signed [31:0] t1, t2, t3, vd1, ve, vf, vg;

	reg[4:0] state;
	parameter sWait = 0, s2 = 1, s3 = 2, s4 = 3, s5 = 4, s6 = 5, s7 = 6, s8 = 7, s9 = 8, s10 = 9, s11 = 10, sFinal = 11;

	always@(posedge Clk) begin
		if(Rst == 1) begin
			state <= sWait;
			t1 <= 0;
			t2 <= 0;
			t3 <= 0;
			vd1 <= 0;
			ve <= 0;
			vf <= 0;
			vg <= 0;
			d1 <= 0;
			d2 <= 0;
			e <= 0;
			f <= 0;
			g <= 0;
			h <= 0;
			Done <= 0;
		end
		else begin
			case(state)
				sWait: begin
					Done <= 0;
					if (Start == 1)
						state <= s2;
					else
						state <= sWait;
				end
				s2: begin
					t2 <= x1 + x2;
					state <= s3;
				s3: begin
					ve <= t2 * t3;
					vg <= x0 - ten;
					state <= s4;
				s4: begin
					vd1 <= t1 * c0;
					state <= s5;
				s5: begin
					vf <= ve * y0;
					state <= s6;
				s6: begin
					d1 <= t1 * c0;
					t3 <= x3 + c0;
					state <= s7;
				s7: begin
					t1 <= x0 + x1;
					e <= t2 * t3;
					state <= s8;
				s8: begin
					f <= ve * y0;
					state <= s9;
				s9: begin
					d2 <= vd1 * five;
					state <= s10;
				s10: begin
					h <= vf + vg;
					state <= s11;
				s11: begin
					g <= x0 - ten;
					state <= sFinal;
				sFinal: begin
					Done <= 1;
					state <= sWait;
				end
			endcase
		end
	end

endmodule
